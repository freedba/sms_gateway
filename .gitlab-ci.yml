# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Go.gitlab-ci.yml
# ver:20211017011

image: golang:1.17.2

variables:
  # Please edit to your GitLab project
  PROJ_NAME: sms_gateway
  K8S_APP: sms-gateway
  REPO_NAME: git@gitlab.fulongzy.com:backend/${PROJ_NAME}.git
  DEP_PROJ_NAME: sms_lib

# The problem is that to be able to use go get, one needs to put
# the repository in the $GOPATH. So for example if your gitlab domain
# is gitlab.com, and that your repository is namespace/project, and
# the default GOPATH being /go, then you'd need to have your
# repository in /go/src/gitlab.com/namespace/project
# Thus, making a symbolic link corrects this.
before_script:
  - mkdir -p $GOPATH/src/$(dirname $REPO_NAME)
  - ln -svf $CI_PROJECT_DIR $GOPATH/src/$REPO_NAME
  - cd $GOPATH/src/$REPO_NAME
  - mkdir $GOPATH/src/$REPO_NAME/etc
  - mkdir /tmp/$DEP_PROJ_NAME
  - git config --global core.compression 0;
    git clone --depth 1 http://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.fulongzy.com/backend/$DEP_PROJ_NAME.git /tmp/$DEP_PROJ_NAME; 
    cd /tmp/$DEP_PROJ_NAME; git fetch --unshallow; git pull --all
  - ln -svf /tmp/$DEP_PROJ_NAME $CI_PROJECT_DIR/../$DEP_PROJ_NAME
  - ln -svf /tmp/$DEP_PROJ_NAME $GOPATH/src/$(dirname $REPO_NAME)/$DEP_PROJ_NAME

stages:
  - make
  - build
  - push
  - deploy

Make go binary:
  tags:
    - sms
  stage: make
  script:
    - go env -w GOPROXY=https://goproxy.cn,direct
    - cd /tmp/$DEP_PROJ_NAME;if [ "$CI_COMMIT_REF_NAME" = "develop" ]; then git checkout develop;git pull; else git checkout master; git pull; fi
    - cd $GOPATH/src/$REPO_NAME;sleep 30;if [ "$CI_COMMIT_REF_NAME" = "develop" ]; then git checkout develop;git pull; else git checkout master; git pull; fi
    - go fmt $(go list ./... | grep -v /vendor/)
    - go vet $(go list ./... | grep -v /vendor/)
    - make build
  artifacts:
    paths:
      - bin
    expire_in: "10 min"
  only:
    - develop
    - tags

Build preview docker image:
  image: docker:19.03.13
  tags:
    - sms
  stage: build
  before_script:
    - echo "https://mirrors.ustc.edu.cn/alpine/v3.10/main" > /etc/apk/repositories
    - apk update
    - apk --no-cache add tzdata
    - cp -rf /usr/share/zoneinfo config/zoneinfo
  script:
    - docker build -t ${CI_REGISTRY_TENCENT_URL}/fulong/${PROJ_NAME}:latest .
  only:
    - develop

Push preview docker image:
  image: docker:19.03.13
  tags:
    - sms
  stage: push
  before_script:
    - echo ${CI_REGISTRY_TENCENT_PASSWORD} | docker login ${CI_REGISTRY_TENCENT_URL} --username ${CI_REGISTRY_TENCENT_USER} --password-stdin
  script:
    - docker push ${CI_REGISTRY_TENCENT_URL}/fulong/${PROJ_NAME}:latest
  only:
    - develop

deploy preview image:
    image: ubuntu:latest
    tags:
      - sms
    stage: deploy
    before_script:
      - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y && apt-get install -y iputils-ping )'
      - eval $(ssh-agent -s)
      - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
      - mkdir -p ~/.ssh
      - chmod 700 ~/.ssh
      - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    script:
      - ssh -o StrictHostKeyChecking=no -p12411 $SSH_USER@$TENCENT_HOST \
        "kubectl rollout restart deployment/$K8S_APP"
      # "kubectl set image deployment ${K8S_APP} *=${CI_REGISTRY_TENCENT_URL}/fulong/${PROJ_NAME}:latest"
    only:
      - develop

Build prd docker image:
  image: docker:19.03.13
  tags:
    - sms
  stage: build
  before_script:
    - echo "https://mirrors.cloud.tencent.com/alpine/v3.10/main" > /etc/apk/repositories
    - apk --no-cache add tzdata
    - cp -rf /usr/share/zoneinfo config/zoneinfo
  script:
    - docker build -t ${PROJ_NAME}:latest .
    - docker tag ${PROJ_NAME}:latest ${CI_REGISTRY_UCLOUD_URL}/fulong/${PROJ_NAME}:${CI_COMMIT_TAG}
  only:
    - tags

Push prd docker image:
  image: docker:19.03.13
  tags:
    - sms
  stage: push
  before_script:
    - echo ${CI_REGISTRY_UCLOUD_PASSWORD} | docker login ${CI_REGISTRY_UCLOUD_URL} --username ${CI_REGISTRY_UCLOUD_USER} --password-stdin
  script:
    - docker push ${CI_REGISTRY_UCLOUD_URL}/fulong/${PROJ_NAME}:${CI_COMMIT_TAG}
  only:
    - tags